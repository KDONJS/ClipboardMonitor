name: Build and Publish Packages

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y rpm dpkg-dev

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Build release
        run: cargo build --release --verbose

      - name: Generate .deb package
        run: |
          cargo install cargo-deb
          cargo deb

      - name: Generate .rpm package
        run: |
          cargo install cargo-generate-rpm
          cargo generate-rpm

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-packages
          path: |
            target/debian/*.deb
            target/generate-rpm/*.rpm

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: artifacts

      - name: List contents of artifacts directory
        run: ls -la artifacts/

      - name: Extract artifacts if compressed
        run: |
          if [ -f artifacts/built-packages.zip ]; then
            unzip artifacts/built-packages.zip -d artifacts/
          fi

      - name: Verify files after extraction
        run: ls -la artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Authenticate with GitHub Container Registry
        run: echo "${{ secrets.GH_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Publish .deb package to GitHub Container Registry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          for file in artifacts/debian/*.deb; do
            package_name=$(dpkg-deb --showformat='${Package}' --show "$file")
            package_version=$(dpkg-deb --showformat='${Version}' --show "$file")
            echo "Subiendo $file a ghcr.io/${{ github.repository }}/$package_name:$package_version"
            
            curl -X PUT \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-Type: application/vnd.debian.binary-package" \
              --data-binary @"$file" \
              "https://ghcr.io/v2/${{ github.repository }}/$package_name/blobs/uploads/"
          done

      - name: Publish .rpm package to GitHub Container Registry
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          for file in artifacts/generate-rpm/*.rpm; do
            package_name=$(rpm -qp --queryformat '%{NAME}' "$file")
            package_version=$(rpm -qp --queryformat '%{VERSION}-%{RELEASE}' "$file")
            echo "Subiendo $file a ghcr.io/${{ github.repository }}/$package_name:$package_version"
  
            curl -X PUT \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-Type: application/x-rpm" \
              --data-binary @"$file" \
              "https://ghcr.io/v2/${{ github.repository }}/$package_name/blobs/uploads/"
          done