name: Build and Release Rust App

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable

      - name: Build
        run: cargo build --release

      - name: Package Debian
        run: |
          # Comandos para empaquetar en formato .deb
          mkdir -p target/debian
          # Suponiendo que tienes un script o comando para generar el paquete .deb
          ./scripts/package_deb.sh

      - name: Package RPM
        run: |
          # Comandos para empaquetar en formato .rpm
          mkdir -p target/generate-rpm
          # Suponiendo que tienes un script o comando para generar el paquete .rpm
          ./scripts/package_rpm.sh

      - name: Verify built packages
        run: |
          echo "Verifying Debian packages..."
          ls -lh target/debian/*.deb || { echo "No Debian packages found."; exit 1; }
          echo "Verifying RPM packages..."
          ls -lh target/generate-rpm/*.rpm || { echo "No RPM packages found."; exit 1; }

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: built-packages
          path: |
            target/debian/*.deb
            target/generate-rpm/*.rpm
          if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          name: built-packages
          path: artifacts

      - name: List downloaded files
        run: ls -lh artifacts/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: artifacts/*
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
